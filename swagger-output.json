{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Zagraj ze Mną",
    "description": "API platrofmy Zagraj ze Mną"
  },
  "servers": [
    {
      "url": "http://localhost:4001",
      "description": "",
      "schemes": [
        "http"
      ]
    }
  ],
  "tags": [
    {
      "name": "Logowanie",
      "description": "Operacje logowania i rejestracji"
    },
    {
      "name": "Weryfikacja",
      "description": "Weryfikacja dostępu dla użytkowników"

    },
    {
      "name": "Profil",
      "description": "Profil użytkownika"
    },
    {
      "name": "Strona Główna",
      "description": "Wysyłanie nazw i ścieżek obrazów"
    },
    {
      "name": "Lobby",
      "description": "Wyświetlanie, tworzenie, dołączanie do lobby"
    },
    {
      "name": "Admin",
      "description": "Obsługa administratora"
    },
    {
      "name": "Kontakt",
      "description": "Panel kontaktowy pomiędzy użytkownikami, a adminem"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Weryfikacja"
        ],
        "summary": "Strona główna",

        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/signup":{
      "post": {
        "tags": [
          "Logowanie"
        ],
        "summary": "Rejestracja użytkownika",
        "description": "Stworzenia konta użytkownika",
        "operationId": "addUser",
        "requestBody": {
          "description": "Stwórz konto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/auth/signin":{
      "post": {
        "tags": [
          "Logowanie"
        ],
        "summary": "Logowanie",
        "description": "Logowanie do systemu",
        "operationId": "Login",
        "requestBody": {
          "description": "Zaloguj się",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Remember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "properties": {
                  "JWT": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1YmVydC5rcmF1cy5vZmZpY2lhbEBnbWFpbC5jb20iLCJpYXQiOjE3MTMwOTM2MzV9.SGVZ_cpjrtDT-1waqyDAw05SG0I59Jg33MsM4dEfSxg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/auth/confirm/:confirmationCode":{
      "get": {
        "tags": [
          "Logowanie"
        ],
        "summary": "Autoryzacja e-mail",
        "description": "Potwierdzenie maila",
        "operationId": "Autoryzacja",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Klucz autoryzacyjny wysłany w wiadomości email",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Zweryfikowano"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "confirmationCode": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphbmJyemVzemN6b3Q5QGdtYWlsLmNvbSIsImlhdCI6MTcxMjg1MTY5N30.46bEOEU4oqn7sS0Bt30erT5Iifm0AIc38hmA-MJHeJo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/auth/remember":{
      "post": {
        "tags": [
          "Logowanie"
        ],
        "summary": "Przypominanie hasła",
        "description": "Reset hasła za potwierdzeniem email",
        "operationId": "rememberPass",
        "requestBody": {
          "description": "Zresetuj hasło!",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Remember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Remember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/auth/reset/:confirmationCode":{
      "get": {
        "tags": [
          "Logowanie"
        ],
        "summary": "Reset hasła e-mail",
        "description": "Reset hasła e-mail",
        "operationId": "resetPass",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Link do zresetowania hasła wysłany w wiadomości email",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Zresetowano"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "Weryfikacja"
        ],
        "summary": "Logowanie",

        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },


    "/api/profile/getUserDetails": {
      "get": {
        "tags": [
          "Profil"
        ],
        "summary": "Pobranie szczegółów użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi na pobranie szczegółów swojego profilu.",
        "operationId": "getUserDetails",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Szczegóły profilu użytkownika zostały pomyślnie pobrane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "jan_kowalski"
                    },
                    "username": {
                      "type": "string",
                      "example": "Johnny"
                    },
                    "about": {
                      "type": "string",
                      "example": "Pasjonat gier i programowania."
                    },
                    "country": {
                      "type": "string",
                      "example": "Polska"
                    },
                    "city": {
                      "type": "string",
                      "example": "Warszawa"
                    },
                    "contact": {
                      "type": "string",
                      "example": "jan@example.com"
                    },
                    "IDlanguage": {
                      "type": "integer",
                      "example": 1,
                      "description": "ID języka zgodnie z tabelą Languages"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - problem z danymi użytkownika."
          },
          "401": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    
    "/api/profile/changePassword": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Zmiana hasła użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi na zmianę jego hasła.",
        "operationId": "changePassword",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Dane wymagane do zmiany hasła",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Aktualne hasło użytkownika"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Nowe hasło użytkownika"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Potwierdzenie nowego hasła"
                  }
                },
                "required": [
                  "oldPassword",
                  "newPassword",
                  "confirmPassword"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Hasło zostało pomyślnie zmienione",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password successfully changed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe dane wejściowe, hasła nie pasują do siebie lub nowe hasło jest takie samo jak stare"
          },
          "404": {
            "description": "Użytkownik nie został znaleziony"
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/profile/postUsername": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Aktualizacja nazwy użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi aktualizować jego nazwę użytkownika.",
        "operationId": "updateUsername",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Żądanie aktualizacji nazwy użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Nowa nazwa użytkownika"
                  }
                },
                "required": [
                  "username"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Nazwa użytkownika została pomyślnie zaktualizowana",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Nazwa użytkownika została pomyślnie zaktualizowana."
                    },
                    "username": {
                      "type": "string",
                      "example": "nowy_nickname"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - brak nazwy użytkownika lub nazwa jest pusta."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "409": {
            "description": "Nazwa użytkownika jest już zajęta."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/profile/updateAbout": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Aktualizacja informacji o użytkowniku",
        "description": "Pozwala zalogowanemu użytkownikowi aktualizować informacje o sobie w profilu.",
        "operationId": "updateAbout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Żądanie aktualizacji informacji o użytkowniku",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "about": {
                    "type": "string",
                    "description": "Informacje o użytkowniku do aktualizacji",
                    "example": "Pasjonat gier komputerowych i programowania."
                  }
                },
                "required": [
                  "about"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Informacje o użytkowniku zostały pomyślnie zaktualizowane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "About information updated successfully."
                    },
                    "about": {
                      "type": "string",
                      "example": "Pasjonat gier komputerowych i programowania."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - brak wymaganego pola 'about' lub pole jest puste."
          },
          "401": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    
    "/api/profile/updateCountry": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Aktualizacja kraju użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi aktualizować kraj w jego profilu.",
        "operationId": "updateCountry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Żądanie aktualizacji kraju użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "description": "Nazwa kraju do zapisania w profilu użytkownika",
                    "example": "Polska"
                  }
                },
                "required": [
                  "country"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Kraj użytkownika został pomyślnie zaktualizowany",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Country updated successfully."
                    },
                    "country": {
                      "type": "string",
                      "example": "Polska"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - brak wymaganego pola 'country' lub pole jest puste."
          },
          "401": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/profile/updateCity": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Aktualizacja miasta użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi aktualizować miasto w jego profilu.",
        "operationId": "updateCity",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Żądanie aktualizacji miasta użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "description": "Nazwa miasta do zapisania w profilu użytkownika",
                    "example": "Warszawa"
                  }
                },
                "required": [
                  "city"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Miasto użytkownika zostało pomyślnie zaktualizowane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "City updated successfully."
                    },
                    "city": {
                      "type": "string",
                      "example": "Warszawa"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - brak wymaganego pola 'city' lub pole jest puste."
          },
          "401": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    
    "/api/profile/updateContact": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Aktualizacja informacji kontaktowej użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi aktualizować jego informacje kontaktowe w profilu.",
        "operationId": "updateContact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Żądanie aktualizacji informacji kontaktowej użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact": {
                    "type": "string",
                    "description": "Nowe informacje kontaktowe użytkownika",
                    "example": "jankowalski#1234"
                  }
                },
                "required": [
                  "contact"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Informacje kontaktowe użytkownika zostały pomyślnie zaktualizowane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact information updated successfully."
                    },
                    "contact": {
                      "type": "string",
                      "example": "jan.kowalski@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - brak wymaganego pola 'contact' lub pole jest puste."
          },
          "401": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    
    "/api/profile/getAllLanguages": {
      "get": {
        "tags": [
          "Profil"
        ],
        "summary": "Pobiera wszystkie języki",
        "description": "Zwraca listę wszystkich języków wraz z ich ID i nazwą.",
        "operationId": "getAllLanguages",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista języków",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "language": {
                        "type": "string",
                        "example": "English"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nie znaleziono języków"
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/profile/setUserLanguage": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Ustawienie języka użytkownika",
        "description": "Zezwala zalogowanemu użytkownikowi na wybór języka.",
        "operationId": "setUserLanguage",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "ID języka do ustawienia dla użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "languageId": {
                    "type": "integer",
                    "description": "ID języka, który ma zostać przypisany do użytkownika",
                    "example": 2
                  }
                },
                "required": [
                  "languageId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Język użytkownika został zaktualizowany"
          },
          "404": {
            "description": "Nie znaleziono języka lub użytkownika"
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    
    "/api/profile/postAvatarFile": {
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Aktualizacja awatara użytkownika",
        "description": "Pozwala zalogowanemu użytkownikowi na przesłanie i aktualizację awatara.",
        "operationId": "updateAvatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Plik awatara użytkownika do przesłania",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Plik awatara użytkownika"
                  }
                },
                "required": [
                  "avatar"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Awatar został pomyślnie zaktualizowany",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Awatar został pomyślnie przesłany."
                    },
                    "avatarPath": {
                      "type": "string",
                      "example": "/uploads/avatar12345.png"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - problem z plikiem awatara (np. zbyt duży rozmiar pliku, nieprawidłowy format)."
          },
          "404": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera."
          }
        }
      }
    },

    "/api/mainGame/getGame": {
      "get": {
        "tags": [
          "Strona Główna"
        ],
        "summary": "Pobranie danych o grach na strone główną.",
        "description": "Pobiera nazwe i ścieżke do gier na stronę główną.",
        "operationId": "getImageData",
        "responses": {
          "200": {
            "description": "Dane gier zostały pomyślnie wysłane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nazwa": {
                      "type": "string",
                      "example": "Minecraft"
                    },
                    "image": {
                      "type": "string",
                      "example": "./folder/minecraft.jpg"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nie znaleziono gier."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
 
    "/api/admin/addNewGame": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a new game",
        "description": "Allows the user to add a new game to the database.",
        "operationId": "addGame",
        "requestBody": {
          "description": "Details of the game to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the game",
                    "example": "Example Game"
                  },
                  "shortname": {
                    "type": "string",
                    "description": "Short name of the game",
                    "example": "ExGame"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the game",
                    "example": "This is an example game description."
                  },
                  "image": {
                    "type": "string",
                    "description": "Image URL of the game",
                    "example": "http://example.com/image.png"
                  }
                },
                "required": [
                  "name",
                  "shortname",
                  "description",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The game was successfully added"
          },
          "400": {
            "description": "A game with this name already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/api/lobbyInside/getUserList": {
      "get": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Pobranie id, nazwy i awatary graczy przypisanych do lobby.",
        "description": "Pobiera id, nazwe i ścieżke do awatara użytkowników wewnątrz lobby.",
        "operationId": "getLobbyUserData",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dane zostały pomyślnie wysłane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "nickname": {
                      "type": "string",
                      "example": "Tomasz_NN"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "./folder/minecraft.jpg"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Nie ma takiego lobby."
          },
          "404": {
            "description": "Nie znaleziono danych."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/lobbyInside/getOwnerLobbyData": {
      "get": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Pobranie id i nazwy właściciela przypisanego do lobby.",
        "description": "Pobiera dane właściciela lobby.",
        "operationId": "getLobbyOwnerData",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dane zostały pomyślnie wysłane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_owner": {
                      "type": "integer",
                      "example": "1"
                    },
                    "nickname": {
                      "type": "string",
                      "example": "Tomasz_NN"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Nie znaleziono lobby."
          },
          "404": {
            "description": "Nie znaleziono właściciela."
          },
          "405": {
            "description": "Nie znaleziono danych właściciela."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/lobbyInside/updatelobbyStillLooking": {
      "put": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Zmiana wartości parametru StillLooking na przeciwny dla wybranego lobby.",
        "description": "Pozwala zmienić wartość parametru StillLooking na przeciwną wartość.",
        "operationId": "updateStillLooking",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parametr został zmieniony"
          },
          "403": {
            "description": "Nie znaleziono lobby."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/lobbyInside/updatelobbyDescription": {
      "put": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Zmiana opisu wybranego lobby.",
        "description": "Pozwala zmienić opis wybraneg lobby.",
        "operationId": "updateLobbyDescription",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "OpisLobby",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": ""

            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opis został zmieniony"
          },
          "403": {
            "description": "Nie znaleziono lobby."
          },
          "404": {
            "description": "Nowa wartość jest taka sama jak starsza."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/lobbyInside/changeLobbyOwner": {
      "put": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Zmiana właściciela lobby.",
        "description": "Pozwala zmienić właściciela lobby za pomocą id lobby i id nowego właściciela.",
        "operationId": "changeLobbyOwner",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          },
          {
            "name": "newOwnerId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parametr zmienił wartość na przeciwną"
          },
          "403": {
            "description": "Nie znaleziono lobby."
          },
          "404": {
            "description": "Nie znaleziono gracza."
          },
          "405": {
            "description": "Nowy właściciel jest poza lobby."
          },
          "406": {
            "description": "Nowy właściciel to stary właściciel."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },



    "/api/lobbyInside/deleteUser": {
      "delete": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Usuwanie gracza z lobby.",
        "description": "Usuwa gracza z lobby na podstawie username i id lobby.",
        "operationId": "deleteUserFromLobby",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Hedonist"

            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gracz został usunięty"
          },
          "403": {
            "description": "Nie ma takiego gracza."
          },
          "404": {
            "description": "Nie ma takiego lobby."
          },
          "405": {
            "description": "Nie ma tego gracza w lobby."
          },
          "406": {
            "description": "Gracz jest właścicielem lobby i nie przekazał uprawnień innemu użytkownikowi."
          },
          "407": {
            "description": "Nowy właściciel nie jest graczem."
          },
          "408": {
            "description": "Nowego właściciela nie ma w lobby."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/lobbyInside/deleteLobby": {
      "delete": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Usuwanie lobby.",
        "description": "Usuwa lobby na podstawie id gracza i id lobby.",
        "operationId": "deleteLobby",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "query",
            "description": "IdLobby",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "UserId",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"

            }
          }
        ],
        
        "responses": {
          "200": {
            "description": "Lobby ustawiono jako nieaktywne."
          },
          "403": {
            "description": "Nie ma takiego gracza."
          },
          "404": {
            "description": "Nie ma takiego lobby."
          },
          "405": {
            "description": "Lobby już jest nieaktywne."
          },
          "406": {
            "description": "Lobby może być usunięte tylko przez właściciela."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/lobbyInside/latest100messages": {
      "post": {
        "tags": [
          "WnętrzeLobby"
        ],
        "summary": "Pobranie 100 ostatnich wiadomości z czatu.",
        "description": "Zwraca 100 ostatnich wiadomości z danego czatu.",
        "operationId": "showMessage",
        "requestBody": {
          "description": "Pokaż wiadomości!",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/100messages"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Wiadomość została dodana do bazy danych.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID_USER": {
                      "type": "integer",
                      "example": 1
                    },
                    "ID_LOBBY": {
                      "type": "integer",
                      "example": 1
                    },
                    "Message": {
                      "type": "string",
                      "example": "Przykładowa wiadomość."
                    },
                    "Date": {
                      "type": "date",
                      "example": "2005-04-2"
                    },
                    "Time": {
                      "type": "time",
                      "example": "21:37:00"
                    }
                  }
                }
              }
            }

          },
 
          "403": {
            "description": "Gracz nie istnieje."
          },
          "404": {
            "description": "Lobby nie istnieje."
          },
          "405": {
            "description": "Nie ma tego gracza w lobby."
          },
          "406": {
            "description": "Wiadomość nie jest poprawna."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    
    "/api/admin/getUser": {
  "get": {
    "tags": [
      "Admin"
    ],
    "summary": "Pobranie listy użytkowników",
    "description": "Pobranie listy użytkowników z opcjonalnym filtrem `isBanned` oraz paginacją",
    "operationId": "fetchUsers",
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Numer strony",
        "schema": {
          "type": "integer",
          "example": 1
        }
      },
      {
        "name": "size",
        "in": "query",
        "required": false,
        "description": "Liczba wyników na stronę",
        "schema": {
          "type": "integer",
          "example": 10
        }
      },
      {
        "name": "isBanned",
        "in": "query",
        "required": false,
        "description": "Filtr użytkowników na podstawie statusu zbanowania",
        "schema": {
          "type": "boolean",
          "example": false
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Successful operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ID_USER": {
                        "type": "integer",
                        "example": 1
                      },
                      "email": {
                        "type": "string",
                        "example": "user@example.com"
                      },
                      "username": {
                        "type": "string",
                        "example": "username"
                      },
                      "avatar": {
                        "type": "string",
                        "example": "/path/to/avatar.jpg"
                      },
                      "isBanned": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                },
                "totalPages": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},
    
    "/api/admin/banUser": {
        "put": {
          "tags": [
            "Admin"
          ],
          "summary": "Zbanowanie użytkownika",
          "description": "Ten endpoint banuje użytkownika poprzez ustawienie pola isBanned na true.",
          "operationId": "banUser",
          "requestBody": {
            "description": "ID użytkownika do zbanowania",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123,
                      "description": "ID użytkownika do zbanowania"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Użytkownik został zbanowany",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Użytkownik został zbanowany."
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Nieprawidłowe żądanie - problem z przesłanymi danymi lub użytkownik jest już zbanowany.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User is already banned."
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Nie znaleziono użytkownika."
            },
            "500": {
              "description": "Wewnętrzny błąd serwera."
            }
          }
        }
    },

    "/api/admin/unbanUser": {
          "put": {
            "tags": [
              "Admin"
            ],
            "summary": "Usunięcie bana użytkownika",
            "description": "Ten endpoint usuwa bana użytkownika poprzez ustawienie pola isBanned na false.",
            "operationId": "unbanUser",
            "requestBody": {
              "description": "ID użytkownika do odbanowania",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 123,
                        "description": "ID użytkownika do odbanowania"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Użytkownik został odbanowany",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Użytkownik został odbanowany."
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Nieprawidłowe żądanie - problem z przesłanymi danymi lub użytkownik nie jest zbanowany.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User is not banned."
                        }
                      }
                    }
                  }
                }
              },
              "403": {
                "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
              },
              "404": {
                "description": "Nie znaleziono użytkownika."
              },
              "500": {
                "description": "Wewnętrzny błąd serwera."
              }
            }
          }
    },

    "/api/admin/getUserIfno": {
        "post": {
          "tags": [
            "Admin"
          ],
          "summary": "Wyświetlenie szczegółów użytkownika",
          "operationId": "getUserIfno",
          "requestBody": {
            "description": "ID użytkownika do zbanowania",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123,
                      "description": "ID użytkownika"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Pomyślnie wsyświetlono",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Pomyślnie wsyświetlono."
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Nieprawidłowe żądanie",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User."
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Nie znaleziono użytkownika."
            },
            "500": {
              "description": "Wewnętrzny błąd serwera."
            }
          }
        }
    },

    "/api/review/addReview": {
      "post": {
        "tags": [
          "Kontakt"
        ],
        "summary": "Dodawanie opini o graczu.",
        "description": "Dodaje opinie o graczu do bazy danych.",
        "operationId": "addReview",
        "parameters": [
          {
            "name": "username",
            "in": "body",
            "description": "NazwaGry",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Hedonist"

            }
          },
          {
            "name": "stars",
            "in": "body",
            "description": "NazwaGry",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "2"

            }
          },
          
          {
            "name": "description",
            "in": "body",
            "description": "description",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Nie no gierka pierwsza klasa, musi być."

            }
          }
        ],
 
        "responses": {
          "200": {
            "description": "Recenzja została dodana do bazy danych.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID_REVIEW": {
                      "type": "integer",
                      "example": 1
                    },
                    "ID_REVIEWER": {
                      "type": "integer",
                      "example": 1
                    },
                    "ID_ABOUT": {
                      "type": "integer",
                      "example": 2
                    },
                    "stars": {
                      "type": "integer",
                      "example": 3
                    },
                    "description": {
                      "type": "string",
                      "example": "Wyjątkowo dobry gracz."
                    },
                    "date": {
                      "type": "date",
                      "example": "2024-10-12"
                    },
                    "time": {
                      "type": "time",
                      "example": "11:12:25"
                    }
                  }
                }
              }
            }

          },
 
          "403": {
            "description": "Nie ma takiego gracza. Niepoprawne id recenzenta."
          },
          "404": {
            "description": "Nie ma takiego gracza. Niepoprawny pseudonim osoby recenzowanej."
          },
          "405": {
            "description": "Gracz nie może wystawić samemu sobie opini."
          },
          "406": {
            "description": "Recenzent wystawił już wcześniej opinie temu graczowi."
          },
          "407": {
            "description": "Niepoprawnie wyznaczona skala opinii."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },

    "/api/review/addGameReq": {
      "post": {
        "tags": [
          "Kontakt"
        ],
        "summary": "Dodawanie prośby o gre.",
        "description": "Dodaje prośbe o dodanie gry do bazy danych.",
        "operationId": "addGameReq",
        "parameters": [
          {
            "name": "name_game",
            "in": "body",
            "description": "NazwaGry",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Shrek"

            }
          },
          {
            "name": "description",
            "in": "body",
            "description": "description",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "Nie no gierka pierwsza klasa, musi być."

            }
          }
        ],
 
        "responses": {
          "200": {
            "description": "Prośba o dodanie gry została dodana do bazy danych.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID_REQUEST": {
                      "type": "integer",
                      "example": 1
                    },
                    "ID_USER": {
                      "type": "integer",
                      "example": 1
                    },
                    "ID_SENDER": {
                      "type": "integer",
                      "example": 2
                    },
                    "GameName": {
                      "type": "string",
                      "example": "Reksio i skarb piratów"
                    },
                    "description": {
                      "type": "string",
                      "example": "Proszę o dodanie tej gry, bo jest interesująca."
                    }
                  }
                }
              }
            }

          },
 
          "403": {
            "description": "Nie ma takiego gracza. Niepoprawne id usera."
          },
          "404": {
            "description": "Nie ma takiego gracza. Niepoprawne id sendera."
          }
        }
      }
    },

    "/api/review/getReportUser":{
      "get": {
        "tags": [
          "Kontakt"
        ],
        "summary": "Wysyłanie listy zgłoszeń",
        "description": "Wysyła listę zgłoszeń do panelu admina",
        "operationId": "getReport",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Strona do wyświeltenia",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "0"

            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Ilość do wyświeltenia",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "User no found"
          }
        }
      }
  },

  "/api/review/getRequestGame":{
    "get": {
      "tags": [
        "Kontakt"
      ],
      "summary": "Wysyłanie listy propozycji gier",
      "description": "Wysyła listę propozycji gier do panelu admina",
      "operationId": "getRequest",
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "description": "Strona do wyświeltenia",
          "required": false,
          "explode": true,
          "schema": {
            "type": "string",
            "default": "0"

          }
        },
        {
          "name": "size",
          "in": "query",
          "description": "Ilość do wyświeltenia",
          "required": false,
          "explode": true,
          "schema": {
            "type": "string",
            "default": "5"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation"
        },
        "404": {
          "description": "Game no found"
        }
      }
    }
},

  "/api/review/deleteGameReq": {
  "delete": {
    "tags": [
      "Kontakt"
    ],
    "summary": "Usuwanie prośby o grę",
    "description": "Usuwanie prośby o grę na podstawie ID prośby przekazanego w ciele żądania.",
    "operationId": "deleteGameReqMiddle",
    "requestBody": {
      "description": "ID prośby do usunięcia",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "integer",
                "example": 123
              }
            },
            "required": [
              "request_id"
            ]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Delete Game request."
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input, request ID is required"
      },
      "404": {
        "description": "Request not found"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},

    "/api/review/deleteReport": {
  "delete": {
    "tags": [
      "Kontakt"
    ],
    "summary": "Usuwanie zgłoszenia użytkownika",
    "description": "Usuwanie zgłoszenia użytkownika na podstawie ID zgłoszenia przekazanego w ciele żądania.",
    "operationId": "deleteReportMiddle",
    "requestBody": {
      "description": "ID zgłoszenia do usunięcia",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "report_id": {
                "type": "integer",
                "example": 123
              }
            },
            "required": [
              "report_id"
            ]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Delete User report."
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input, report ID is required"
      },
      "404": {
        "description": "Report not found"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},
  
    "/api/mainGame/getGamePagination":{
        "get": {
          "tags": [
            "Strona Główna"
          ],
          "summary": "Wysyłanie gier na stronę główną",
          "description": "Wysyła gry z paginacją na stronę główną",
          "operationId": "getGamePagination",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Strona do wyświeltenia",
              "required": false,
              "explode": true,
              "schema": {
                "type": "string",
                "default": "0"
  
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Ilość do wyświeltenia",
              "required": false,
              "explode": true,
              "schema": {
                "type": "string",
                "default": "5"
              }
            },
            {
              "name": "name",
              "in": "query",
              "description": "Wpisywana nazwa",
              "required": false,
              "explode": true,
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "404": {
              "description": "Game no found"
            }
          }
        }
    },

    "/register": {
      "get": {
        "tags": [
          "Weryfikacja"
        ],
        "summary": "Rejestracja",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/restartpassword": {
      "get": {
        "tags": [
          "Weryfikacja"
        ],
        "summary": "Restart hasła",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lobby/add":{
      "post": {
        "tags": [
          "Lobby"
        ],
        "summary": "Tworzenie lobby",
        "description": "Utworzenie lobby poprzez formularz",
        "operationId": "createLobby",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Stwórz lobby!",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lobby"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Lobby zostało pomyślnie stworzone",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lobby successfully created"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "nie został znaleziony"
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    },
    "/api/lobby/show":{
      "get": {
        "tags": [
          "Lobby"
        ],
        "summary": "Wyświetlenie lobby",
        "description": "Wyświetlenie lobby paginacja po stronie serwera",
        "operationId": "displayLobby",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Strona do wyświeltenia",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "0"

            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Ilość do wyświeltenia",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "5"
            }
          },
          {
            "name": "game",
            "in": "query",
            "description": "Gra dla których wyświetlane są lobby",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Fraza która jest szukana w nazwie i opisie lobby",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "description": "Nazwa kolumny po której tabela będzie sortowana rosnąco, naprzykład 'NeedUsers' wyświetla lobby z najmniejszą liczbą szukanych graczy",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Nazwa języka jako filtr lobby",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayedLobby"
                }
              }

            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lobby/data":{
      "get": {
        "tags": [
          "Lobby"

        ],
        "summary": "Pobranie danych",
        "description": "Pobranie danych o grach i językach",
        "operationId": "Pobranie danych",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {

                  "$ref": "#/components/schemas/LobbyData"

                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/api/profile/usersLobby":{
      "post": {
        "tags": [
          "Profil"
        ],
        "summary": "Pobranie danych o lobby",
        "description": "Pobranie danych o lobby",
        "operationId": "Pobranie danych",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Wyświetl lobby!",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          },
          "required": true
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {

                  "$ref": "#/components/schemas/DisplayedLobby"

                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/api/profile/usersGames":{

      "post": {
        "tags": [
          "Profil"
        ],

        "summary": "Pobranie danych o grach",
        "description": "Pobranie danych o grach",

        "operationId": "Pobranie danych",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {

          "description": "Wyświetl gry!",

          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {

                  "type": "object",
                  "properties": {
                    "shotname": {
                      "type": "string",
                      "example": "LOL"
                    },
                    "image": {
                      "type": "string",
                      "example": "./folder/minecraft.jpg"
                    }
                  }

                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },

    
    "/api/profile/addGameToShelf": {

      "post": {
        "tags": [
          "Profil"
        ],

        "summary": "Dodaj grę do półki użytkownika",
        "description": "Umożliwia zalogowanemu użytkownikowi dodanie nowej gry do swojej półki.",
        "operationId": "addGameToShelf",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {

          "description": "Dane potrzebne do dodania gry do półki",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID_GAME": {
                    "type": "integer",
                    "example": 456,
                    "description": "ID gry, która ma być dodana do półki"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gra została pomyślnie dodana do półki",

            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {

                    "message": {
                      "type": "string",
                      "example": "Gra została dodana do półki."
                    },
                    "shelfDetails": {
                      "type": "object",
                      "properties": {
                        "ID_SHELF": {
                          "type": "integer",
                          "example": 123,
                          "description": "ID nowo utworzonej półki"
                        },
                        "ID_USER": {
                          "type": "integer",
                          "example": 789,
                          "description": "ID użytkownika, który dodał grę"
                        },
                        "ID_GAME": {
                          "type": "integer",
                          "example": 456,
                          "description": "ID gry dodanej do półki"
                        }
                      }

                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - problem z przesłanymi danymi."
          },
          "403": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "404": {
            "description": "Nie znaleziono żądanej gry."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera."
          }
        }
      }

    },
    
    "/api/profile/removeGameFromShelf": {
      "delete": {
        "tags": [
          "Profil"
        ],
        "summary": "Usuń grę z półki użytkownika",
        "description": "Usunięcie gry z półki zalogowanego użytkownika na podstawie podanego ID_GAME.",
        "operationId": "removeGameFromShelf",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID_GAME": {
                    "type": "integer",
                    "example": 456,
                    "description": "ID gry, która ma być usunięta z półki"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gra została pomyślnie usunięta z półki",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gra została usunięta z półki."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - problem z danymi wejściowymi"
          },
          "403": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy"
          },
          "404": {
            "description": "Nie znaleziono gry na półce tego użytkownika"
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }

    },

    "/api/profile/getUserStats": {
      "get": {
        "tags": [
          "Profil"
        ],
        "summary": "Pobranie statystyk użytkownika",
        "description": "Zwraca ilość gier na półce użytkownika oraz ilość lobby, do których jest przypisany.",
        "operationId": "getUserStats",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Statystyki użytkownika zostały pomyślnie pobrane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gamesOnShelf": {
                      "type": "integer",
                      "example": 5,
                      "description": "Ilość gier na półce użytkownika"
                    },
                    "lobbiesJoined": {
                      "type": "integer",
                      "example": 3,
                      "description": "Ilość lobby, do których użytkownik jest przypisany"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nieprawidłowe żądanie - problem z żądaniem od klienta."
          },
          "401": {
            "description": "Nieautoryzowane - brak tokena lub token jest nieprawidłowy."
          },
          "403": {
            "description": "Użytkownik nie znaleziony."
          },
          "500": {
            "description": "Wewnętrzny błąd serwera"
          }
        }
      }
    }    

  },  
  "components": {

    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Language": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "language": {
            "type": "string",
            "example": "English"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Tiger"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "Remember": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "fiwok42218@rehezb.com"
          },
          "password": {
            "type": "string",
            "example": "Haslo123."
          }
        }
      },
      "LobbyData": {
        "type": "object",
        "properties": {
          "Languages": {
            "type": "string",
            "example": "Polski"
          },
          "Games": {
            "type": "string",
            "example": "VALORANT"
          }
        }
      },
      "Lobby": {
        "type": "object",
        "properties": {
          "gameName": {
            "type": "string",
            "example": "VALORANT"
          },
          "Name": {
            "type": "string",
            "example": "Mid i Top do Clasha"
          },
          "Description": {
            "type": "string",
            "example": "Potrzebnych 2 graczy do najbliższego clasha"
          },
          "language": {
            "type": "string",
            "example": "Polski"
          },
          "NeedUsers": {
            "type": "string",
            "example": "3"
          }
        }
      },
      "DisplayedLobby": {
        "type": "object",
        "properties": {
          "ID_LOBBY": {
            "type": "string",
            "example": "1"
          },
          "Name": {
            "type": "string",
            "example": "Mid i Top do Clasha"
          },
          "Description": {
            "type": "string",
            "example": "Potrzebnych 2 graczy do najbliższego clasha"
          },
          "NeedUsers": {
            "type": "string",
            "example": "3"
          },
          "ownerAvatar": {
            "type": "string",
            "example": "/img/nickname"
          },
          "playerCount": {
            "type": "string",
            "example": "0"
          },
          "Pages": {
            "type": "string",
            "example": "12"
          },
          "gameName": {
            "type": "string",
            "example": "League of Legends"
          }
        }
      },
      "DisplayLobbies": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string",
            "example": "0"
          },
          "size": {
            "type": "string",
            "example": "20"
          }
        }
      },
      "100messages": {
        "type": "object",
        "properties": {
          "room": {
            "type": "string",
            "example": "10"
          }
        }
      }
  }
  }
}